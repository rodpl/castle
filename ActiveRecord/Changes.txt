beta 4
======
- You can now apply IsUnique to a property that also has PrimaryKey on it without problem.

- Resolved IsUnique bug with ActiveRecordValidationBase<> (it was non functional)

- Resolved test bugs with IsUnique for .net 1 and .net 2.

- Added SimpleQuery<T>.Enumerate(), for use with large queries - .NET 2.0 only.

- Added ValidateCreditCard attribute.

- Added ValidateLength attribute.

- Added support for .Net 2.0 Connection Strings in the config file, using this method:

<activerecord>
	<add key="hibernate.connection.connection_string" value="ConnectionString = ${ConnectionStringKey}" />
</activerecord>

<connectionStrings>
	<add name="ConnectionStringKey" connectionString="The Connection String"/>
</connectionStrings>

This allows to take advantage of the connection string encryption as well as manage them using the built in tools.

- Added Exists<PkType>(PkType id) support to allow for checking of an object's existance 
  in the datastore.

- Brought ActiveRecordBase.Generic inline with ActiveRecordBase feature wise.  
  Public Static Methods are now present on all ActiveRecordBase.Generic objects for common tasks such as Find, FindAll, etc.

  <This is a breaking change.>
  
- Added support for NHibernate dynamic-update, dynamic-insert to ActiveRecordAttribute

- Simplified NHibernate markup generation for testing

  Attributes are now written in one of two ways. Tags that have both an open and close 
  will have no space at the end of the attributes on the opening tag, while tags that 
  have no contents (<tag />) will be written with one space after the last attribute.
  
  Examples:
  
  <openclose attrib="test" attrib2="test"></openclose>
  
  <noclosetag attrib="test"/>

- Added ActiveRecordValidationBase<> to support validation on Generic AR classes

- Updated DeleteAll(Type targetType, IEnumerable pkValues) to support non int primary keys

- Add more hookable methods.

- Refactored Validation support to use NHibernate.IValidatable

- Brought ActiveRecordMediator.Generic inline with ActiveRecordMediator.  This is a breaking 
  change (removal of a few methods/renaming of a few existing).

- Add import support (kudos to Dan Burnea)
  [ActiveRecord, Import(typeof(ImportClassRow), "ImportClassRow")]
  public class ImportClass : ActiveRecordBase

beta 3
======

- Added FindAllByProperty, FindFirst and FindOne

- Added DeleteAll(type, where) (kudos to G. Richard Bellamy)

- Applied patch from Josh Robb. Added support for hooks on ActiveRecordBase<T>.

- DifferentDatabaseScope: so you can open a session using a different dbconnection
  and persist your object model. Very experimental version

- Fixed: Support for multiple databases was completely broken.

- An implementation of ISessionFactoryHolder can be specified through the configuration, attribute sessionfactoryholdertype
  on the config node.

- Added: ActiveRecordBase<T> - a generic form a ActiveRecordBase which relieves the need to re-write
  all the base static methods to hide the type parameter and cast the result. Generics do it for you.

- Added: ActiveRecordStarter.CreateSchemaFromFile(filename) as an alternative to CreateSchema. 

- Added: Support for composite keys - composite key class must be serializable and implement both Equals and GetHashCode.
  Not complete support, missing the NHibernate key-many-to-one element in the composite key.
  
- Added: Support for Lazy loading class using BelongsTo. Will throw if there is a non virtual property that
  also BelongsTo().

- Closed: (AR-24) ValidationException must contain the validation error messages

- Support for fields in addition to properties

- Added [Any], [Any.MetaValue] and [HasManyToAny] attributes.

- Small improvement on ActiveRecordModelBuilder (less intensive on IsDefined/GetCustomAttribute)

- IThreadScopeInfo introduced. Two implementations: ThreadScopeInfo and WebThreadScopeInfo. 
  ThreadScopeInfo is the default implementation. You can use WebThreadScopeInfo by simply using 
  isWeb="true" on the configuration node:
  
  <config isWeb="true">
    ..
  
  Or you can provide your own implementation specifying the full type name

  <config threadinfotype="my.threadinfotype, my.assembly">
    ..

beta 2
======

- Transaction support: lots of minor fixes

- Added support for map relations. 
  Necessary to specify Index and IndexType on the HasMany (or HasAndBelongsToMany)

- IsUnique validator fix
  

Version 0.0.1.5
===============
  
  Inner workings fully rewritten, better test cases coverage

  Added SlicedFindAll


Version 0.0.1.4
===============

  Implemented support for Joined Subclasses

  Implemented initial support for validations


Version 0.0.1.3
===============

  Applied patch from John Morales (support for idbags)


Version 0.0.1.2
===============

  Applied patch from John Morales (support for sets)

  Applied suggestion and fixes from "jianxiao jiang" <jiangjianxiao@gmail.com> (NHibernateDelegate)


Version 0.0.1.1
===============
  
  Applied patch from Luiz César Kuriki <luizck@gmail.com> in order to support NHibernate's Component feature
  
  Applied modification suggested by Andrew Hallock and Craig Neuwirt in order to support HasOne relations.


Version 0.0.1.0 
===============

  Released (not changes to track yet)

